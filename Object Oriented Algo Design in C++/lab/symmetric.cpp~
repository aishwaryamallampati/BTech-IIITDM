#include<iostream>
using namespace std;
static int count=0;

class point
{
public:
	point();
	int array[100];
	int x[100],y[100];
	int xi[100],yi[100];
	int size;
	int l;
	void symmetric();
	int search(int start,int keyx,int keyy);
};



point::point()
{
	int i=0,j=0,half;
	float lmin,rmin,min,min2;
	l=1;
	cout<<"\nenter the number of points: ";
	cin>>size;
	cout<<"\nenter the points:";
	for(i=1;i<=size;i++)
		cin>>array[i];
	
	for(i=1;i<=size;i++)
	{	
	 for(j=1;j<=size;j++)
	 {	
		x[l]=array[i];
		y[l]=array[j];
		l++;
	 }	
	}
	cout<<"\ngiven input:";
	for(j=1;j<l;j++)
	{
	 cout<<"("<<x[j]<<","<<y[j]<<")"<<" ";
	}
	cout<<endl;
	symmetric();
	cout<<"the total no of symmetric pairs is "<<count<<endl;
}

void point::symmetric()
{
	int i,j,result;
	for(i=1;i<l;i++)
	{
	 xi[i]=y[i];
	 yi[i]=x[i];
	 for(j=i+1;j<l;j++)
	 {
		result=search(j,xi[i],yi[i]);
		if(result==1)
		{
			cout<<"\n"<<"("<<x[i]<<","<<y[i]<<") and ("<<xi[i]<<","<<yi[i]<<")form a symmetric pair\n";
			count++;
		}	  	
	 } 
	}
	
}

int point::search(int start,int keyx,int keyy)
{
	for(int p=start;p<l;p++)
	{
	 if(x[p]==keyx&&y[p]==keyy)
		return 1;
	 else
	 	return 0;
	}
}

main()
{
	point point1;
	return 0;
}

